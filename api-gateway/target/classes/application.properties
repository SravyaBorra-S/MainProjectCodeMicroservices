eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka
spring.application.name=api-gateway
logging.level.root= INFO
logging.level.org.springframework.cloud.gateway.route.RouteDefinitionRouteLocator= INFO
logging.level.org.springframework.cloud.gateway= TRACE


server.port=8088

## User Service Route
spring.cloud.gateway.routes[0].id=user-service
spring.cloud.gateway.routes[0].uri=lb://user-service
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/user/**
spring.cloud.gateway.routes[0].filters[0].name=CircuitBreaker
spring.cloud.gateway.routes[0].filters[0].args.name=userCircuitBreaker
spring.cloud.gateway.routes[0].filters[0].args.fallbackUri=forward:/fallback/user

## Product Service Route
spring.cloud.gateway.routes[1].id=product-serviceproject
spring.cloud.gateway.routes[1].uri=lb://product-serviceproject
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/product/**
spring.cloud.gateway.routes[1].filters[0].name=CircuitBreaker
spring.cloud.gateway.routes[1].filters[0].args.name=productCircuitBreaker
spring.cloud.gateway.routes[1].filters[0].args.fallbackUri=forward:/fallback/product


## Cart Service Route
spring.cloud.gateway.routes[2].id=cart-service
spring.cloud.gateway.routes[2].uri=lb://cart-service
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/cart/**
spring.cloud.gateway.routes[2].filters[0].name=CircuitBreaker
spring.cloud.gateway.routes[2].filters[0].args.name=cartCircuitBreaker
spring.cloud.gateway.routes[2].filters[0].args.fallbackUri=forward:/fallback/cart


## Payment Service Route
spring.cloud.gateway.routes[3].id=payment-service
spring.cloud.gateway.routes[3].uri=lb://payment-service
spring.cloud.gateway.routes[3].predicates[0]=Path=/payments/**
spring.cloud.gateway.routes[3].filters[0].name=CircuitBreaker
spring.cloud.gateway.routes[3].filters[0].args.name=PaymentCircuitBreaker
spring.cloud.gateway.routes[3].filters[0].args.fallbackUri=forward:/fallback/payment

## Order Service Route
spring.cloud.gateway.routes[4].id=order-service
spring.cloud.gateway.routes[4].uri=lb://order-service
spring.cloud.gateway.routes[4].predicates[0]=Path=/api/order/**
spring.cloud.gateway.routes[4].filters[0].name=CircuitBreaker
spring.cloud.gateway.routes[4].filters[0].args.name=orderCircuitBreaker
spring.cloud.gateway.routes[4].filters[0].args.fallbackUri=forward:/fallback/order

## Inventory Service Route
spring.cloud.gateway.routes[5].id=Inventory-service
spring.cloud.gateway.routes[5].uri=lb://Inventory-service
spring.cloud.gateway.routes[5].predicates[0]=Path=/products/**
spring.cloud.gateway.routes[5].filters[0].name=CircuitBreaker
spring.cloud.gateway.routes[5].filters[0].args.name=InventoryCircuitBreaker
spring.cloud.gateway.routes[5].filters[0].args.fallbackUri=forward:/fallback/inventory

      

#RESILIENCE
resilience4j.circuitbreaker.instances.CircuitBreaker.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.CircuitBreaker.eventConsumerBufferSize=10
resilience4j.circuitbreaker.instances.CircuitBreaker.failureRateThreshold=50
resilience4j.circuitbreaker.instances.CircuitBreaker.minimumNumberOfCalls=5
resilience4j.circuitbreaker.instances.CircuitBreaker.automaticTransitionFromOpenToHalfOpenEnabled=true
resilience4j.circuitbreaker.instances.CircuitBreaker.waitDurationInOpenState=5s
resilience4j.circuitbreaker.instances.CircuitBreaker.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.CircuitBreaker.slidingWindowSize=10
resilience4j.circuitbreaker.instances.CircuitBreaker.slidingWindowType=COUNT_BASED



##Actuator

management.health.circuitbreakers.enabled= true
management.endpoints.web.exposure.include= health,info
management.endpoint.health.show-details= always

#
##Details for info actuator
#
info.app.name= API Gateway
info.app.description= Gateway to access Services
info.app.version= 1.0.0
